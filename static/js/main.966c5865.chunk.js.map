{"version":3,"sources":["context/Filters.jsx","components/Select.jsx","components/NumericFilter.jsx","components/NumericFilterTags.jsx","context/Planets.jsx","components/Radio.jsx","components/Sort.jsx","components/Header.jsx","components/Loading.jsx","functions/filteringFunctions.js","functions/sortingFunctions.js","components/Table.jsx","App.js","index.js"],"names":["FiltersContext","createContext","FiltersProvider","children","useState","filterByName","numericColumnFilters","numericColumnOptions","order","column","sort","filters","setFilters","Provider","value","useFilters","context","useContext","Error","Select","propsObject","dataTestid","onChange","options","Form","defaultProps","size","data-testid","map","option","index","key","NumericFilter","selectValue","setSelectValue","comparisonValue","setComparisonValue","inputValue","setInputValue","useEffect","Col","xs","Row","className","target","Control","type","Button","onClick","newNumericColumnOptions","filter","numericColumnOption","newNumericColumnFilter","comparison","disabled","length","variant","NumericFilterTags","buttonGroupDisplay","ButtonGroup","Badge","bg","role","newNumericColumnFilters","numericColumnFilter","removeFilter","PlanetsContext","PlanetsProvider","planets","setPlanets","loading","setLoading","fetch","then","response","json","planetsObject","planetsArray","results","result","residents","usePlanets","Radio","checked","Check","label","id","name","Sort","radioValue","setRadioValue","columnOptions","Object","keys","handleRadioChange","selectProps","ascProps","descProps","Header","placeholder","Loading","Array","from","_","i","_2","j","Placeholder","as","animation","manipulateCellValue","letter","output","slice","toLowerCase","sortPlanets","a","b","x","y","Table","tablePlanets","planet","includes","filterPlanetsByName","forEach","objectValue","parseInt","filterPlanetsByNumericValues","striped","bordered","hover","responsive","planetKey","planetIndex","tableColumns","planetKeyIndex","movieLink","liIndex","href","replace","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.966c5865.chunk.js","sourcesContent":["import React, { createContext, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const FiltersContext = createContext();\n\nexport const FiltersProvider = ({ children }) => {\n  const [filters, setFilters] = useState({\n    filterByName: '',\n    numericColumnFilters: [],\n    numericColumnOptions: [\n      'diameter',\n      'orbital_period',\n      'population',\n      'rotation_period',\n      'surface_water',\n    ],\n    order: {\n      column: 'name',\n      sort: 'ASC',\n    },\n  });\n\n  return (\n    <FiltersContext.Provider\n      value={ { filters, setFilters } }\n    >\n      { children }\n    </FiltersContext.Provider>\n  );\n};\n\nexport const useFilters = () => {\n  const context = useContext(FiltersContext);\n  if (!context) { throw new Error('useFilters must be used within a FiltersProvider'); }\n  return context;\n};\n\nFiltersProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nexport default function Select({ propsObject }) {\n  const { dataTestid, value, onChange, options } = propsObject;\n\n  Form.Select.defaultProps = {\n    value,\n    onChange,\n    size: 'sm',\n  };\n\n  return (\n    <Form.Select data-testid={ dataTestid }>\n      {options.map((option, index) => (\n        <option key={ index } value={ option }>\n          { option }\n        </option>\n      ))}\n    </Form.Select>\n  );\n}\n\nSelect.propTypes = {\n  columnSelect: PropTypes.shape({\n    dataTestid: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    options: PropTypes.arrayOf(PropTypes.string),\n  }),\n}.isRequired;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport { useFilters } from '../context/Filters';\nimport Select from './Select';\n\nexport default function NumericFilter() {\n  const { filters, setFilters } = useFilters();\n  const { numericColumnFilters, numericColumnOptions } = filters;\n\n  const [selectValue, setSelectValue] = useState('diameter');\n  const [comparisonValue, setComparisonValue] = useState('maior que');\n  const [inputValue, setInputValue] = useState('0');\n\n  useEffect(() => {\n    setSelectValue(numericColumnOptions[0]);\n  }, [numericColumnOptions]);\n\n  const addFilter = () => {\n    const newNumericColumnOptions = [...numericColumnOptions].filter(\n      (numericColumnOption) => numericColumnOption !== selectValue,\n    );\n    const newNumericColumnFilter = {\n      column: selectValue,\n      comparison: comparisonValue,\n      value: inputValue,\n    };\n    setFilters({\n      ...filters,\n      numericColumnFilters: [...numericColumnFilters, newNumericColumnFilter],\n      numericColumnOptions: newNumericColumnOptions,\n    });\n  };\n\n  Col.defaultProps = { xs: 3 };\n\n  return (\n    <Row className=\"ms-2 me-2 mt-2\">\n      <Col className=\"p-0 pe-2\">\n        <Select\n          propsObject={ {\n            dataTestid: 'column-filter',\n            value: selectValue || '',\n            onChange: ({ target }) => setSelectValue(target.value),\n            options: numericColumnOptions,\n          } }\n        />\n      </Col>\n\n      <Col className=\"p-0 pe-2\">\n        <Select\n          propsObject={ {\n            dataTestid: 'comparison-filter',\n            value: comparisonValue,\n            onChange: ({ target }) => setComparisonValue(target.value),\n            options: ['maior que', 'menor que', 'igual a'],\n          } }\n        />\n      </Col>\n\n      <Col className=\"p-0 pe-2\">\n        <Form.Control\n          type=\"number\"\n          data-testid=\"value-filter\"\n          value={ inputValue }\n          onChange={ ({ target }) => setInputValue(target.value) }\n          size=\"sm\"\n        />\n      </Col>\n\n      <Col className=\"d-grid p-0\">\n        <Button\n          type=\"button\"\n          data-testid=\"button-filter\"\n          onClick={ addFilter }\n          disabled={ numericColumnOptions.length === 0 }\n          size=\"sm\"\n          variant=\"secondary\"\n          className=\"border-light\"\n        >\n          Filtrar\n        </Button>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Badge, Button, ButtonGroup } from 'react-bootstrap';\nimport { useFilters } from '../context/Filters';\n\nexport default function NumericFilterTags() {\n  const { filters, setFilters } = useFilters();\n  const { numericColumnFilters, numericColumnOptions } = filters;\n\n  const removeFilter = (column) => {\n    const newNumericColumnFilters = [...numericColumnFilters].filter(\n      (numericColumnFilter) => numericColumnFilter.column !== column,\n    );\n    setFilters({\n      ...filters,\n      numericColumnFilters: newNumericColumnFilters,\n      numericColumnOptions: [...numericColumnOptions, column].sort(),\n    });\n  };\n\n  const buttonGroupDisplay = numericColumnFilters.length > 0 ? 'd-block' : 'd-none';\n\n  return (\n    <ButtonGroup className={ `${buttonGroupDisplay} ps-1 pe-1` }>\n      { numericColumnFilters.map(({ column, comparison, value }, index) => (\n        <Button\n          className=\"mb-2 ms-1 me-1 rounded-1 border border-secondary\"\n          size=\"sm\"\n          key={ index }\n          variant=\"dark\"\n          data-testid=\"filter\"\n        >\n          <Badge\n            className=\"me-2\"\n            bg=\"danger\"\n            role=\"button\"\n            onClick={ () => removeFilter(column) }\n          >\n            X\n          </Badge>\n          { `${column} é ${comparison} ${value}` }\n        </Button>\n      ))}\n    </ButtonGroup>\n  );\n}\n","import React, { createContext, useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PlanetsContext = createContext();\n\nexport const PlanetsProvider = ({ children }) => {\n  const [planets, setPlanets] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch('https://swapi-trybe.herokuapp.com/api/planets/')\n      .then((response) => response.json())\n      .then((planetsObject) => {\n        const planetsArray = planetsObject.results.map((result) => {\n          delete result.residents;\n          return result;\n        });\n        setPlanets(planetsArray);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <PlanetsContext.Provider\n      value={ { planets, loading } }\n    >\n      { children }\n    </PlanetsContext.Provider>\n  );\n};\n\nexport const usePlanets = () => {\n  const context = useContext(PlanetsContext);\n  if (!context) { throw new Error('usePlanets must be used within a PlanetsProvider'); }\n  return context;\n};\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nexport default function Radio({ propsObject }) {\n  const { value, onChange, checked, dataTestid } = propsObject;\n\n  Form.Check.defaultProps = {\n    label: value,\n    id: value,\n    type: 'radio',\n    value,\n    name: 'sort-type',\n    onChange,\n    checked,\n    size: 'sm',\n  };\n\n  return (\n    <Form.Check data-testid={ dataTestid } />\n  );\n}\n\nRadio.propTypes = {\n  propsObject: PropTypes.shape({\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    checked: PropTypes.bool,\n    dataTestid: PropTypes.string,\n  }),\n}.isRequired;\n","import React, { useState } from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport { useFilters } from '../context/Filters';\nimport { usePlanets } from '../context/Planets';\nimport Select from './Select';\nimport Radio from './Radio';\n\nexport default function Sort() {\n  const [selectValue, setSelectValue] = useState('name');\n  const [radioValue, setRadioValue] = useState('ASC');\n\n  const { planets } = usePlanets();\n  const { filters, setFilters } = useFilters();\n\n  let columnOptions = ['no_options_available'];\n\n  if (planets.length > 0) {\n    columnOptions = Object.keys(planets[0]);\n  }\n\n  const handleRadioChange = ({ target }) => {\n    if (radioValue !== target.value) {\n      setRadioValue(target.value);\n    }\n  };\n\n  const sortPlanets = () => {\n    setFilters({\n      ...filters,\n      order: { column: selectValue, sort: radioValue },\n    });\n  };\n\n  const selectProps = {\n    dataTestid: 'column-sort',\n    value: selectValue,\n    onChange: ({ target }) => setSelectValue(target.value),\n    options: columnOptions,\n  };\n\n  const ascProps = {\n    value: 'ASC',\n    onChange: handleRadioChange,\n    checked: radioValue === 'ASC',\n    dataTestid: 'column-sort-input-asc',\n  };\n\n  const descProps = {\n    value: 'DESC',\n    onChange: handleRadioChange,\n    checked: radioValue === 'DESC',\n    dataTestid: 'column-sort-input-desc',\n  };\n\n  Col.defaultProps = { xs: 3 };\n\n  return (\n    <Row className=\"m-2\">\n      <Col className=\"p-0 pe-2\">\n        <Select propsObject={ selectProps } />\n      </Col>\n\n      <Col className=\"d-flex justify-content-center align-items-center p-0 pe-2\">\n        <Radio propsObject={ ascProps } />\n      </Col>\n\n      <Col className=\"d-flex justify-content-center align-items-center p-0 pe-2\">\n        <Radio propsObject={ descProps } />\n      </Col>\n\n      <Col className=\"d-grid p-0\">\n        <Button\n          type=\"button\"\n          onClick={ sortPlanets }\n          data-testid=\"column-sort-button\"\n          size=\"sm\"\n          variant=\"secondary\"\n          className=\"border border-light\"\n        >\n          Ordenar\n        </Button>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Form, Row } from 'react-bootstrap';\nimport { useFilters } from '../context/Filters';\nimport NumericFilter from './NumericFilter';\nimport NumericFilterTags from './NumericFilterTags';\nimport Sort from './Sort';\n\nexport default function Header() {\n  const { filters, setFilters } = useFilters();\n\n  const handleInputChange = ({ target }) => {\n    setFilters({ ...filters, filterByName: target.value });\n  };\n\n  return (\n    <header>\n      <h1 id=\"title\">Star Wars</h1>\n      <h3 id=\"subtitle\">Planets Search</h3>\n      <Form>\n        <Row className=\"ms-2 me-2\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Filtrar por nome\"\n            data-testid=\"name-filter\"\n            value={ filters.filterByName }\n            onChange={ handleInputChange }\n            size=\"sm\"\n          />\n        </Row>\n        <NumericFilter />\n        <Sort />\n      </Form>\n      <NumericFilterTags />\n    </header>\n  );\n}\n","import React from 'react';\nimport { Placeholder, Row, Col } from 'react-bootstrap';\n\nexport default function Loading() {\n  const ROWS = 13;\n  const COLS = 3;\n\n  Col.defaultProps = { xs: 4 };\n\n  return (\n    <div>\n      {\n        Array.from({ length: ROWS }).map((_, i) => (\n          <Row className=\"ms-1 mb-2 me-1\" key={ i }>\n            {\n              Array.from({ length: COLS }).map((_2, j) => (\n                <Placeholder as={ Col } className=\"ps-1 pe-1\" key={ j } animation=\"glow\">\n                  <Placeholder size=\"lg\" className=\"rounded-1 p-3 w-100\" />\n                </Placeholder>\n              ))\n            }\n          </Row>\n        ))\n      }\n    </div>\n  );\n}\n","const EMPTY = 0;\nconst RADIX = 10;\n\nexport const filterPlanetsByName = (planets, name) => {\n  let output = planets;\n\n  if (name !== '') {\n    output = [...planets]\n      .filter((planet) => planet.name.toLowerCase().includes(name.toLowerCase()));\n  }\n\n  return output;\n};\n\nexport const filterPlanetsByNumericValues = (planets, numericColumnFilters) => {\n  let output = [...planets];\n  if (numericColumnFilters.length > EMPTY) {\n    numericColumnFilters.forEach((filter) => {\n      if (filter.comparison === 'maior que') {\n        output = output\n          .filter((planet) => {\n            const objectValue = planet[filter.column];\n            return parseInt(objectValue, RADIX) > filter.value;\n          });\n      } else if (filter.comparison === 'menor que') {\n        output = output\n          .filter((planet) => {\n            const objectValue = planet[filter.column];\n            return parseInt(objectValue, RADIX) < filter.value;\n          });\n      } else {\n        output = output\n          .filter((planet) => planet[filter.column] === filter.value);\n      }\n    });\n  }\n  return output;\n};\n","const ZERO = 0;\nconst ONE = 1;\nconst KEEP_LAST_3_CHARACTERS = -3;\nconst KEEP_LAST_13_CHARACTERS = -13;\nconst CUT_FIRST_44_CHARACTERS = 44;\n\nconst manipulateCellValue = (letter, column) => {\n  let output;\n\n  switch (column) {\n  case ('url'):\n    output = (`0${letter[column].slice(CUT_FIRST_44_CHARACTERS)}`)\n      .slice(KEEP_LAST_3_CHARACTERS).toLowerCase();\n    break;\n  case ('surface_water'):\n  case ('orbital_period'):\n  case ('diameter'):\n  case ('rotation_period'):\n  case ('population'):\n    output = letter[column] === 'unknown'\n      ? letter[column].toLowerCase()\n      : (`000000000000${letter[column]}`).slice(KEEP_LAST_13_CHARACTERS).toLowerCase();\n    break;\n  case ('films'):\n    output = letter[column][ZERO].toLowerCase();\n    break;\n  default:\n    output = letter[column].toLowerCase();\n  }\n\n  return output;\n};\n\nconst sortPlanets = (planets, order) => (\n  planets.sort((a, b) => {\n    const x = manipulateCellValue(a, order.column);\n    const y = manipulateCellValue(b, order.column);\n    if (x < y) { return order.sort === 'ASC' ? -ONE : ONE; }\n    if (x > y) { return order.sort === 'ASC' ? ONE : -ONE; }\n    return ZERO;\n  })\n);\n\nexport default sortPlanets;\n","import React from 'react';\nimport * as bs from 'react-bootstrap';\nimport Loading from './Loading';\nimport { usePlanets } from '../context/Planets';\nimport { useFilters } from '../context/Filters';\nimport {\n  filterPlanetsByName,\n  filterPlanetsByNumericValues,\n} from '../functions/filteringFunctions';\nimport sortPlanets from '../functions/sortingFunctions';\n\nexport default function Table() {\n  const { planets, loading } = usePlanets();\n  const { filters } = useFilters();\n  const { filterByName, numericColumnFilters, order } = filters;\n\n  if (loading || planets.length < 1) { return <Loading />; }\n\n  let tablePlanets = filterPlanetsByName(planets, filterByName);\n  tablePlanets = filterPlanetsByNumericValues(tablePlanets, numericColumnFilters);\n  tablePlanets = sortPlanets(tablePlanets, order);\n\n  return (\n    <bs.Table\n      striped\n      bordered\n      hover\n      variant=\"dark\"\n      size=\"sm\"\n      responsive\n      className=\"border-secondary\"\n    >\n      <thead>\n        <tr>\n          { Object.keys(planets[0]).map((planetKey, index) => (\n            <th key={ index } className=\"pe-2 ps-2\">{ planetKey }</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        { tablePlanets.map((planet, planetIndex) => {\n          const planetKeys = Object.keys(planet);\n          const tableColumns = planetKeys\n            .map((planetKey, planetKeyIndex) => {\n              let output;\n              switch (planetKey) {\n              case ('name'):\n                output = (\n                  <td\n                    key={ planetKeyIndex }\n                    data-testid=\"planet-name\"\n                    className=\"pe-2 ps-2\"\n                  >\n                    { planet[planetKey] }\n                  </td>);\n                break;\n\n              case ('films'):\n                output = (\n                  <td key={ planetKeyIndex } className=\"pe-2 ps-2\">\n                    <ul>\n                      { planet[planetKey].map((movieLink, liIndex) => (\n                        <li key={ liIndex }>\n                          <a href={ movieLink }>\n                            { `Film ${movieLink.replace(/\\D+/g, '')}` }\n                          </a>\n                        </li>)) }\n                    </ul>\n                  </td>);\n                break;\n\n              case ('url'):\n                output = (\n                  <td key={ planetKeyIndex } className=\"pe-2 ps-2\">\n                    <a href={ planet[planetKey] }>\n                      { `Planet ${planet[planetKey].replace(/\\D+/g, '')}` }\n                    </a>\n                  </td>);\n                break;\n\n              default:\n                output = (\n                  <td key={ planetKeyIndex } className=\"pe-2 ps-2\">\n                    { planet[planetKey] }\n                  </td>\n                );\n              }\n\n              return output;\n            });\n\n          return (<tr key={ planetIndex }>{ tableColumns }</tr>);\n        }) }\n      </tbody>\n    </bs.Table>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Table from './components/Table';\nimport { FiltersProvider } from './context/Filters';\nimport { PlanetsProvider } from './context/Planets';\n\nfunction App() {\n  return (\n    <PlanetsProvider>\n      <FiltersProvider>\n        <Header />\n        <Table />\n      </FiltersProvider>\n    </PlanetsProvider>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}