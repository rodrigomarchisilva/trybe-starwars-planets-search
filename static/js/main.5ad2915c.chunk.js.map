{"version":3,"sources":["context/Filters.jsx","components/Select.jsx","components/NumericFilter.jsx","components/NumericFilterTags.jsx","context/Planets.jsx","components/Radio.jsx","components/Sort.jsx","components/Header.jsx","components/Loading.jsx","functions/filteringFunctions.js","functions/sortingFunctions.js","components/Table.jsx","App.js","index.js"],"names":["FiltersContext","createContext","FiltersProvider","children","useState","filterByName","numericColumnFilters","numericColumnOptions","order","column","sort","filters","setFilters","Provider","value","useFilters","context","useContext","Error","Select","propsObject","dataTestid","onChange","options","Form","defaultProps","size","data-testid","map","option","index","key","NumericFilter","selectValue","setSelectValue","comparisonValue","setComparisonValue","inputValue","setInputValue","useEffect","colProps","xs","sm","xl","className","Col","target","Control","type","Button","onClick","newNumericColumnOptions","filter","numericColumnOption","newNumericColumnFilter","comparison","disabled","length","variant","NumericFilterTags","buttonGroupDisplay","ButtonGroup","Badge","bg","role","newNumericColumnFilters","numericColumnFilter","removeFilter","PlanetsContext","PlanetsProvider","planets","setPlanets","loading","setLoading","fetch","then","response","json","planetsObject","planetsArray","results","result","residents","usePlanets","Radio","checked","Check","label","id","name","Sort","radioValue","setRadioValue","columnOptions","Object","keys","handleRadioChange","selectProps","ascProps","descProps","Header","Row","placeholder","Loading","Array","from","_","i","_2","j","Placeholder","as","animation","manipulateCellValue","letter","output","slice","toLowerCase","sortPlanets","a","b","x","y","Table","tablePlanets","planet","includes","filterPlanetsByName","forEach","objectValue","parseInt","filterPlanetsByNumericValues","striped","bordered","hover","responsive","planetKey","planetIndex","tableColumns","planetKeyIndex","movieLink","liIndex","href","replace","App","ReactDOM","render","document","getElementById"],"mappings":"kSAGaA,EAAiBC,0BAEjBC,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACjBC,mBAAS,CACrCC,aAAc,GACdC,qBAAsB,GACtBC,qBAAsB,CACpB,WACA,iBACA,aACA,kBACA,iBAEFC,MAAO,CACLC,OAAQ,OACRC,KAAM,SAbqC,mBACxCC,EADwC,KAC/BC,EAD+B,KAiB/C,OACE,kBAACZ,EAAea,SAAhB,CACEC,MAAQ,CAAEH,UAASC,eAEjBT,IAKKY,EAAa,WACxB,IAAMC,EAAUC,qBAAWjB,GAC3B,IAAKgB,EAAW,MAAM,IAAIE,MAAM,oDAChC,OAAOF,G,eC9BM,SAASG,EAAT,GAAkC,IAAhBC,EAAe,EAAfA,YACvBC,EAAyCD,EAAzCC,WAAYP,EAA6BM,EAA7BN,MAAOQ,EAAsBF,EAAtBE,SAAUC,EAAYH,EAAZG,QAQrC,OANAC,IAAKL,OAAOM,aAAe,CACzBX,QACAQ,WACAI,KAAM,MAIN,kBAACF,EAAA,EAAKL,OAAN,CAAaQ,cAAcN,GACxBE,EAAQK,KAAI,SAACC,EAAQC,GAAT,OACX,4BAAQC,IAAMD,EAAQhB,MAAQe,GAC1BA,OCZG,SAASG,IAAiB,IAAD,EACNjB,IAAxBJ,EAD8B,EAC9BA,QAASC,EADqB,EACrBA,WACTN,EAA+CK,EAA/CL,qBAAsBC,EAAyBI,EAAzBJ,qBAFQ,EAIAH,mBAAS,YAJT,mBAI/B6B,EAJ+B,KAIlBC,EAJkB,OAKQ9B,mBAAS,aALjB,mBAK/B+B,EAL+B,KAKdC,EALc,OAMFhC,mBAAS,KANP,mBAM/BiC,EAN+B,KAMnBC,EANmB,KAQtCC,qBAAU,WACRL,EAAe3B,EAAqB,MACnC,CAACA,IAEJ,IAgBMiC,EACI,CACNC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,UAAW,OALTJ,EAOQ,CACVC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,UAAW,OAXTJ,EAaG,CACLC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,UAAW,OAjBTJ,EAmBI,CACNC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,UAAW,cAIf,OACE,oCACE,kBAACC,EAAA,EAASL,EACR,kBAACrB,EAAD,CACEC,YAAc,CACZC,WAAY,gBACZP,MAAOmB,GAAe,GACtBX,SAAU,gBAAGwB,EAAH,EAAGA,OAAH,OAAgBZ,EAAeY,EAAOhC,QAChDS,QAAShB,MAKf,kBAACsC,EAAA,EAASL,EACR,kBAACrB,EAAD,CACEC,YAAc,CACZC,WAAY,oBACZP,MAAOqB,EACPb,SAAU,gBAAGwB,EAAH,EAAGA,OAAH,OAAgBV,EAAmBU,EAAOhC,QACpDS,QAAS,CAAC,YAAa,YAAa,eAK1C,kBAACsB,EAAA,EAASL,EACR,kBAAChB,EAAA,EAAKuB,QAAN,CACEC,KAAK,SACLrB,cAAY,eACZb,MAAQuB,EACRf,SAAW,gBAAGwB,EAAH,EAAGA,OAAH,OAAgBR,EAAcQ,EAAOhC,QAChDY,KAAK,QAIT,kBAACmB,EAAA,EAASL,EACR,kBAACS,EAAA,EAAD,CACED,KAAK,SACLrB,cAAY,gBACZuB,QAjFU,WAChB,IAAMC,EAA0B,YAAI5C,GAAsB6C,QACxD,SAACC,GAAD,OAAyBA,IAAwBpB,KAE7CqB,EAAyB,CAC7B7C,OAAQwB,EACRsB,WAAYpB,EACZrB,MAAOuB,GAETzB,EAAW,2BACND,GADK,IAERL,qBAAqB,GAAD,mBAAMA,GAAN,CAA4BgD,IAChD/C,qBAAsB4C,MAsElBK,SAA2C,IAAhCjD,EAAqBkD,OAChC/B,KAAK,KACLgC,QAAQ,YACRd,UAAU,gBAPZ,a,oBC3FO,SAASe,IAAqB,IAAD,EACV5C,IAAxBJ,EADkC,EAClCA,QAASC,EADyB,EACzBA,WACTN,EAA+CK,EAA/CL,qBAAsBC,EAAyBI,EAAzBJ,qBAaxBqD,EAAqBtD,EAAqBmD,OAAS,EAAI,UAAY,SAEzE,OACE,kBAACI,EAAA,EAAD,CAAajB,UAAS,UAAMgB,EAAN,eAClBtD,EAAqBsB,KAAI,WAAgCE,GAAhC,IAAGrB,EAAH,EAAGA,OAAQ8C,EAAX,EAAWA,WAAYzC,EAAvB,EAAuBA,MAAvB,OACzB,kBAACmC,EAAA,EAAD,CACEL,UAAU,mDACVlB,KAAK,KACLK,IAAMD,EACN4B,QAAQ,OACR/B,cAAY,UAEZ,kBAACmC,EAAA,EAAD,CACElB,UAAU,OACVmB,GAAG,SACHC,KAAK,SACLd,QAAU,kBA3BC,SAACzC,GACpB,IAAMwD,EAA0B,YAAI3D,GAAsB8C,QACxD,SAACc,GAAD,OAAyBA,EAAoBzD,SAAWA,KAE1DG,EAAW,2BACND,GADK,IAERL,qBAAsB2D,EACtB1D,qBAAsB,sBAAIA,GAAJ,CAA0BE,IAAQC,UAoBlCyD,CAAa1D,KAJ/B,KAPF,UAeOA,EAfP,iBAemB8C,EAfnB,YAeiCzC,QCpClC,IAAMsD,EAAiBnE,0BAEjBoE,EAAkB,SAAC,GAAkB,IAAhBlE,EAAe,EAAfA,SAAe,EACjBC,mBAAS,IADQ,mBACxCkE,EADwC,KAC/BC,EAD+B,OAEjBnE,oBAAS,GAFQ,mBAExCoE,EAFwC,KAE/BC,EAF+B,KAkB/C,OAdAlC,qBAAU,WACRkC,GAAW,GACXC,MAAM,kDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,IAAMC,EAAeD,EAAcE,QAAQpD,KAAI,SAACqD,GAE9C,cADOA,EAAOC,UACPD,KAETV,EAAWQ,GACXN,GAAW,QAEd,IAGD,kBAACL,EAAevD,SAAhB,CACEC,MAAQ,CAAEwD,UAASE,YAEjBrE,IAKKgF,EAAa,WACxB,IAAMnE,EAAUC,qBAAWmD,GAC3B,IAAKpD,EAAW,MAAM,IAAIE,MAAM,oDAChC,OAAOF,GC/BM,SAASoE,EAAT,GAAiC,IAAhBhE,EAAe,EAAfA,YACtBN,EAAyCM,EAAzCN,MAAOQ,EAAkCF,EAAlCE,SAAU+D,EAAwBjE,EAAxBiE,QAAShE,EAAeD,EAAfC,WAalC,OAXAG,IAAK8D,MAAM7D,aAAe,CACxB8D,MAAOzE,EACP0E,GAAI1E,EACJkC,KAAM,QACNlC,QACA2E,KAAM,YACNnE,WACA+D,UACA3D,KAAM,MAIN,kBAACF,EAAA,EAAK8D,MAAN,CAAY3D,cAAcN,ICZf,SAASqE,IAAQ,IAAD,EACStF,mBAAS,QADlB,mBACtB6B,EADsB,KACTC,EADS,OAEO9B,mBAAS,OAFhB,mBAEtBuF,EAFsB,KAEVC,EAFU,KAIrBtB,EAAYa,IAAZb,QAJqB,EAKGvD,IAAxBJ,EALqB,EAKrBA,QAASC,EALY,EAKZA,WAEbiF,EAAgB,CAAC,wBAEjBvB,EAAQb,OAAS,IACnBoC,EAAgBC,OAAOC,KAAKzB,EAAQ,KAGtC,IAAM0B,EAAoB,SAAC,GAAgB,IAAdlD,EAAa,EAAbA,OACvB6C,IAAe7C,EAAOhC,OACxB8E,EAAc9C,EAAOhC,QAWnB0B,EACI,CACNC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,UAAW,OALTJ,EAOC,CACHC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,UAAW,wDAXTJ,EAaE,CACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,UAAW,wDAjBTJ,EAmBI,CACNC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,UAAW,cAITqD,EAAc,CAClB5E,WAAY,cACZP,MAAOmB,EACPX,SAAU,gBAAGwB,EAAH,EAAGA,OAAH,OAAgBZ,EAAeY,EAAOhC,QAChDS,QAASsE,GAGLK,EAAW,CACfpF,MAAO,MACPQ,SAAU0E,EACVX,QAAwB,QAAfM,EACTtE,WAAY,yBAGR8E,EAAY,CAChBrF,MAAO,OACPQ,SAAU0E,EACVX,QAAwB,SAAfM,EACTtE,WAAY,0BAGd,OACE,oCACE,kBAACwB,EAAA,EAASL,EACR,kBAACrB,EAAD,CAAQC,YAAc6E,KAGxB,kBAACpD,EAAA,EAASL,EACR,kBAAC4C,EAAD,CAAOhE,YAAc8E,KAGvB,kBAACrD,EAAA,EAASL,EACR,kBAAC4C,EAAD,CAAOhE,YAAc+E,KAGvB,kBAACtD,EAAA,EAASL,EACR,kBAACS,EAAA,EAAD,CACED,KAAK,SACLE,QAxEY,WAClBtC,EAAW,2BACND,GADK,IAERH,MAAO,CAAEC,OAAQwB,EAAavB,KAAMiF,OAsEhChE,cAAY,qBACZD,KAAK,KACLgC,QAAQ,YACRd,UAAU,uBANZ,aCzFO,SAASwD,IAAU,IAAD,EACCrF,IAAxBJ,EADuB,EACvBA,QAASC,EADc,EACdA,WAMX4B,EAAW,CACfC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,UAAW,OAGb,OACE,gCACE,wBAAI4C,GAAG,SAAP,aACA,wBAAIA,GAAG,YAAP,kBACA,kBAAChE,EAAA,EAAD,KACE,kBAAC6E,EAAA,EAAD,CAAKzD,UAAU,OACb,kBAACC,EAAA,EAASL,EACR,kBAAChB,EAAA,EAAKuB,QAAN,CACEC,KAAK,OACLsD,YAAY,mBACZ3E,cAAY,cACZb,MAAQH,EAAQN,aAChBiB,SAvBc,SAAC,GAAgB,IAAdwB,EAAa,EAAbA,OAC3BlC,EAAW,2BAAKD,GAAN,IAAeN,aAAcyC,EAAOhC,UAuBpCY,KAAK,QAGT,kBAACgE,EAAD,MACA,kBAAC1D,EAAD,QAGJ,kBAAC2B,EAAD,O,oBCtCS,SAAS4C,IAMtB,OAFA1D,IAAIpB,aAAe,CAAEgB,GAAI,GAGvB,6BAEI+D,MAAMC,KAAK,CAAEhD,OARN,KAQsB7B,KAAI,SAAC8E,EAAGC,GAAJ,OAC/B,kBAACN,EAAA,EAAD,CAAKzD,UAAU,iBAAiBb,IAAM4E,GAElCH,MAAMC,KAAK,CAAEhD,OAVZ,IAU4B7B,KAAI,SAACgF,EAAIC,GAAL,OAC/B,kBAACC,EAAA,EAAD,CAAaC,GAAKlE,IAAMD,UAAU,YAAYb,IAAM8E,EAAIG,UAAU,QAChE,kBAACF,EAAA,EAAD,CAAapF,KAAK,KAAKkB,UAAU,iCCjBnD,ICMMqE,EAAsB,SAACC,EAAQzG,GACnC,IAAI0G,EAEJ,OAAQ1G,GACR,IAAM,MACJ0G,EAAS,WAAKD,EAAOzG,GAAQ2G,MAPD,KAQzBA,OAVwB,GAUMC,cACjC,MACF,IAAM,gBACN,IAAM,iBACN,IAAM,WACN,IAAM,kBACN,IAAM,aACJF,EAA4B,YAAnBD,EAAOzG,GACZyG,EAAOzG,GAAQ4G,cACf,sBAAgBH,EAAOzG,IAAW2G,OAlBV,IAkByCC,cACrE,MACF,IAAM,QACJF,EAASD,EAAOzG,GAxBP,GAwBqB4G,cAC9B,MACF,QACEF,EAASD,EAAOzG,GAAQ4G,cAG1B,OAAOF,GAaMG,EAVK,SAAChD,EAAS9D,GAAV,OAClB8D,EAAQ5D,MAAK,SAAC6G,EAAGC,GACf,IAAMC,EAAIR,EAAoBM,EAAG/G,EAAMC,QACjCiH,EAAIT,EAAoBO,EAAGhH,EAAMC,QACvC,OAAIgH,EAAIC,EAA2B,QAAflH,EAAME,MApClB,IAqCJ+G,EAAIC,EAA2B,QAAflH,EAAME,KArClB,KADC,MCWE,SAASiH,IAAS,IAAD,EACDxC,IAArBb,EADsB,EACtBA,QAASE,EADa,EACbA,QACT7D,EAAYI,IAAZJ,QACAN,EAA8CM,EAA9CN,aAAcC,EAAgCK,EAAhCL,qBAAsBE,EAAUG,EAAVH,MAE5C,GAAIgE,GAAWF,EAAQb,OAAS,EAAK,OAAO,kBAAC8C,EAAD,MAE5C,IAAIqB,EFf6B,SAACtD,EAASmB,GAC3C,IAAI0B,EAAS7C,EAOb,MALa,KAATmB,IACF0B,EAAS,YAAI7C,GACVlB,QAAO,SAACyE,GAAD,OAAYA,EAAOpC,KAAK4B,cAAcS,SAASrC,EAAK4B,mBAGzDF,EEOYY,CAAoBzD,EAASjE,GAIhD,OAHAuH,EFL0C,SAACtD,EAAShE,GACpD,IAAI6G,EAAM,YAAO7C,GAqBjB,OApBIhE,EAAqBmD,OAhBb,GAiBVnD,EAAqB0H,SAAQ,SAAC5E,GAE1B+D,EADwB,cAAtB/D,EAAOG,WACA4D,EACN/D,QAAO,SAACyE,GACP,IAAMI,EAAcJ,EAAOzE,EAAO3C,QAClC,OAAOyH,SAASD,EArBd,IAqBoC7E,EAAOtC,SAElB,cAAtBsC,EAAOG,WACP4D,EACN/D,QAAO,SAACyE,GACP,IAAMI,EAAcJ,EAAOzE,EAAO3C,QAClC,OAAOyH,SAASD,EA3Bd,IA2BoC7E,EAAOtC,SAGxCqG,EACN/D,QAAO,SAACyE,GAAD,OAAYA,EAAOzE,EAAO3C,UAAY2C,EAAOtC,YAItDqG,EEjBQgB,CAA6BP,EAActH,GAC1DsH,EAAeN,EAAYM,EAAcpH,GAGvC,kBAAC,IAAD,CACE4H,SAAO,EACPC,UAAQ,EACRC,OAAK,EACL5E,QAAQ,OACRhC,KAAK,KACL6G,YAAU,EACV3F,UAAU,oBAEV,+BACE,4BACIkD,OAAOC,KAAKzB,EAAQ,IAAI1C,KAAI,SAAC4G,EAAW1G,GAAZ,OAC5B,wBAAIC,IAAMD,EAAQc,UAAU,aAAc4F,QAIhD,+BACIZ,EAAahG,KAAI,SAACiG,EAAQY,GAC1B,IACMC,EADa5C,OAAOC,KAAK8B,GAE5BjG,KAAI,SAAC4G,EAAWG,GACf,IAAIxB,EACJ,OAAQqB,GACR,IAAM,OACJrB,EACE,wBACEpF,IAAM4G,EACNhH,cAAY,cACZiB,UAAU,aAERiF,EAAOW,IAEb,MAEF,IAAM,QACJrB,EACE,wBAAIpF,IAAM4G,EAAiB/F,UAAU,aACnC,4BACIiF,EAAOW,GAAW5G,KAAI,SAACgH,EAAWC,GAAZ,OACtB,wBAAI9G,IAAM8G,GACR,uBAAGC,KAAOF,GAAV,eACYA,EAAUG,QAAQ,OAAQ,YAKhD,MAEF,IAAM,MACJ5B,EACE,wBAAIpF,IAAM4G,EAAiB/F,UAAU,aACnC,uBAAGkG,KAAOjB,EAAOW,IAAjB,iBACcX,EAAOW,GAAWO,QAAQ,OAAQ,OAGpD,MAEF,QACE5B,EACE,wBAAIpF,IAAM4G,EAAiB/F,UAAU,aACjCiF,EAAOW,IAKf,OAAOrB,KAGX,OAAQ,wBAAIpF,IAAM0G,GAAgBC,QCzE7BM,MAXf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC5C,EAAD,MACA,kBAAC,EAAD,SCPR6C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5ad2915c.chunk.js","sourcesContent":["import React, { createContext, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const FiltersContext = createContext();\n\nexport const FiltersProvider = ({ children }) => {\n  const [filters, setFilters] = useState({\n    filterByName: '',\n    numericColumnFilters: [],\n    numericColumnOptions: [\n      'diameter',\n      'orbital_period',\n      'population',\n      'rotation_period',\n      'surface_water',\n    ],\n    order: {\n      column: 'name',\n      sort: 'ASC',\n    },\n  });\n\n  return (\n    <FiltersContext.Provider\n      value={ { filters, setFilters } }\n    >\n      { children }\n    </FiltersContext.Provider>\n  );\n};\n\nexport const useFilters = () => {\n  const context = useContext(FiltersContext);\n  if (!context) { throw new Error('useFilters must be used within a FiltersProvider'); }\n  return context;\n};\n\nFiltersProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nexport default function Select({ propsObject }) {\n  const { dataTestid, value, onChange, options } = propsObject;\n\n  Form.Select.defaultProps = {\n    value,\n    onChange,\n    size: 'sm',\n  };\n\n  return (\n    <Form.Select data-testid={ dataTestid }>\n      {options.map((option, index) => (\n        <option key={ index } value={ option }>\n          { option }\n        </option>\n      ))}\n    </Form.Select>\n  );\n}\n\nSelect.propTypes = {\n  columnSelect: PropTypes.shape({\n    dataTestid: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    options: PropTypes.arrayOf(PropTypes.string),\n  }),\n}.isRequired;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Col, Form } from 'react-bootstrap';\nimport { useFilters } from '../context/Filters';\nimport Select from './Select';\n\nexport default function NumericFilter() {\n  const { filters, setFilters } = useFilters();\n  const { numericColumnFilters, numericColumnOptions } = filters;\n\n  const [selectValue, setSelectValue] = useState('diameter');\n  const [comparisonValue, setComparisonValue] = useState('maior que');\n  const [inputValue, setInputValue] = useState('0');\n\n  useEffect(() => {\n    setSelectValue(numericColumnOptions[0]);\n  }, [numericColumnOptions]);\n\n  const addFilter = () => {\n    const newNumericColumnOptions = [...numericColumnOptions].filter(\n      (numericColumnOption) => numericColumnOption !== selectValue,\n    );\n    const newNumericColumnFilter = {\n      column: selectValue,\n      comparison: comparisonValue,\n      value: inputValue,\n    };\n    setFilters({\n      ...filters,\n      numericColumnFilters: [...numericColumnFilters, newNumericColumnFilter],\n      numericColumnOptions: newNumericColumnOptions,\n    });\n  };\n\n  const colProps = {\n    column: {\n      xs: 3,\n      sm: 4,\n      xl: 2,\n      className: 'p-1',\n    },\n    comparison: {\n      xs: 3,\n      sm: 4,\n      xl: 2,\n      className: 'p-1',\n    },\n    input: {\n      xs: 3,\n      sm: 2,\n      xl: 1,\n      className: 'p-1',\n    },\n    button: {\n      xs: 3,\n      sm: 2,\n      xl: 1,\n      className: 'd-grid p-1',\n    },\n  };\n\n  return (\n    <>\n      <Col { ...colProps.column }>\n        <Select\n          propsObject={ {\n            dataTestid: 'column-filter',\n            value: selectValue || '',\n            onChange: ({ target }) => setSelectValue(target.value),\n            options: numericColumnOptions,\n          } }\n        />\n      </Col>\n\n      <Col { ...colProps.comparison }>\n        <Select\n          propsObject={ {\n            dataTestid: 'comparison-filter',\n            value: comparisonValue,\n            onChange: ({ target }) => setComparisonValue(target.value),\n            options: ['maior que', 'menor que', 'igual a'],\n          } }\n        />\n      </Col>\n\n      <Col { ...colProps.input }>\n        <Form.Control\n          type=\"number\"\n          data-testid=\"value-filter\"\n          value={ inputValue }\n          onChange={ ({ target }) => setInputValue(target.value) }\n          size=\"sm\"\n        />\n      </Col>\n\n      <Col { ...colProps.button }>\n        <Button\n          type=\"button\"\n          data-testid=\"button-filter\"\n          onClick={ addFilter }\n          disabled={ numericColumnOptions.length === 0 }\n          size=\"sm\"\n          variant=\"secondary\"\n          className=\"border-light\"\n        >\n          Filtrar\n        </Button>\n      </Col>\n    </>\n  );\n}\n","import React from 'react';\nimport { Badge, Button, ButtonGroup } from 'react-bootstrap';\nimport { useFilters } from '../context/Filters';\n\nexport default function NumericFilterTags() {\n  const { filters, setFilters } = useFilters();\n  const { numericColumnFilters, numericColumnOptions } = filters;\n\n  const removeFilter = (column) => {\n    const newNumericColumnFilters = [...numericColumnFilters].filter(\n      (numericColumnFilter) => numericColumnFilter.column !== column,\n    );\n    setFilters({\n      ...filters,\n      numericColumnFilters: newNumericColumnFilters,\n      numericColumnOptions: [...numericColumnOptions, column].sort(),\n    });\n  };\n\n  const buttonGroupDisplay = numericColumnFilters.length > 0 ? 'd-block' : 'd-none';\n\n  return (\n    <ButtonGroup className={ `${buttonGroupDisplay} ps-1 pe-1` }>\n      { numericColumnFilters.map(({ column, comparison, value }, index) => (\n        <Button\n          className=\"mb-2 ms-1 me-1 rounded-1 border border-secondary\"\n          size=\"sm\"\n          key={ index }\n          variant=\"dark\"\n          data-testid=\"filter\"\n        >\n          <Badge\n            className=\"me-2\"\n            bg=\"danger\"\n            role=\"button\"\n            onClick={ () => removeFilter(column) }\n          >\n            X\n          </Badge>\n          { `${column} é ${comparison} ${value}` }\n        </Button>\n      ))}\n    </ButtonGroup>\n  );\n}\n","import React, { createContext, useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PlanetsContext = createContext();\n\nexport const PlanetsProvider = ({ children }) => {\n  const [planets, setPlanets] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch('https://swapi-trybe.herokuapp.com/api/planets/')\n      .then((response) => response.json())\n      .then((planetsObject) => {\n        const planetsArray = planetsObject.results.map((result) => {\n          delete result.residents;\n          return result;\n        });\n        setPlanets(planetsArray);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <PlanetsContext.Provider\n      value={ { planets, loading } }\n    >\n      { children }\n    </PlanetsContext.Provider>\n  );\n};\n\nexport const usePlanets = () => {\n  const context = useContext(PlanetsContext);\n  if (!context) { throw new Error('usePlanets must be used within a PlanetsProvider'); }\n  return context;\n};\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nexport default function Radio({ propsObject }) {\n  const { value, onChange, checked, dataTestid } = propsObject;\n\n  Form.Check.defaultProps = {\n    label: value,\n    id: value,\n    type: 'radio',\n    value,\n    name: 'sort-type',\n    onChange,\n    checked,\n    size: 'sm',\n  };\n\n  return (\n    <Form.Check data-testid={ dataTestid } />\n  );\n}\n\nRadio.propTypes = {\n  propsObject: PropTypes.shape({\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    checked: PropTypes.bool,\n    dataTestid: PropTypes.string,\n  }),\n}.isRequired;\n","import React, { useState } from 'react';\nimport { Button, Col } from 'react-bootstrap';\nimport { useFilters } from '../context/Filters';\nimport { usePlanets } from '../context/Planets';\nimport Select from './Select';\nimport Radio from './Radio';\n\nexport default function Sort() {\n  const [selectValue, setSelectValue] = useState('name');\n  const [radioValue, setRadioValue] = useState('ASC');\n\n  const { planets } = usePlanets();\n  const { filters, setFilters } = useFilters();\n\n  let columnOptions = ['no_options_available'];\n\n  if (planets.length > 0) {\n    columnOptions = Object.keys(planets[0]);\n  }\n\n  const handleRadioChange = ({ target }) => {\n    if (radioValue !== target.value) {\n      setRadioValue(target.value);\n    }\n  };\n\n  const sortPlanets = () => {\n    setFilters({\n      ...filters,\n      order: { column: selectValue, sort: radioValue },\n    });\n  };\n\n  const colProps = {\n    select: {\n      xs: 3,\n      sm: 2,\n      xl: 1,\n      className: 'p-1',\n    },\n    asc: {\n      xs: 3,\n      sm: 2,\n      xl: 1,\n      className: 'd-flex justify-content-center align-items-center p-1',\n    },\n    desc: {\n      xs: 3,\n      sm: 2,\n      xl: 1,\n      className: 'd-flex justify-content-center align-items-center p-1',\n    },\n    button: {\n      xs: 3,\n      sm: 2,\n      xl: 1,\n      className: 'd-grid p-1',\n    },\n  };\n\n  const selectProps = {\n    dataTestid: 'column-sort',\n    value: selectValue,\n    onChange: ({ target }) => setSelectValue(target.value),\n    options: columnOptions,\n  };\n\n  const ascProps = {\n    value: 'ASC',\n    onChange: handleRadioChange,\n    checked: radioValue === 'ASC',\n    dataTestid: 'column-sort-input-asc',\n  };\n\n  const descProps = {\n    value: 'DESC',\n    onChange: handleRadioChange,\n    checked: radioValue === 'DESC',\n    dataTestid: 'column-sort-input-desc',\n  };\n\n  return (\n    <>\n      <Col { ...colProps.select }>\n        <Select propsObject={ selectProps } />\n      </Col>\n\n      <Col { ...colProps.asc }>\n        <Radio propsObject={ ascProps } />\n      </Col>\n\n      <Col { ...colProps.desc }>\n        <Radio propsObject={ descProps } />\n      </Col>\n\n      <Col { ...colProps.button }>\n        <Button\n          type=\"button\"\n          onClick={ sortPlanets }\n          data-testid=\"column-sort-button\"\n          size=\"sm\"\n          variant=\"secondary\"\n          className=\"border border-light\"\n        >\n          Ordenar\n        </Button>\n      </Col>\n    </>\n  );\n}\n","import React from 'react';\nimport { Col, Form, Row } from 'react-bootstrap';\nimport { useFilters } from '../context/Filters';\nimport NumericFilter from './NumericFilter';\nimport NumericFilterTags from './NumericFilterTags';\nimport Sort from './Sort';\n\nexport default function Header() {\n  const { filters, setFilters } = useFilters();\n\n  const handleInputChange = ({ target }) => {\n    setFilters({ ...filters, filterByName: target.value });\n  };\n\n  const colProps = {\n    xs: 12,\n    sm: 4,\n    xl: 2,\n    className: 'p-1',\n  };\n\n  return (\n    <header>\n      <h1 id=\"title\">Star Wars</h1>\n      <h3 id=\"subtitle\">Planets Search</h3>\n      <Form>\n        <Row className=\"m-1\">\n          <Col { ...colProps }>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Filtrar por nome\"\n              data-testid=\"name-filter\"\n              value={ filters.filterByName }\n              onChange={ handleInputChange }\n              size=\"sm\"\n            />\n          </Col>\n          <Sort />\n          <NumericFilter />\n        </Row>\n      </Form>\n      <NumericFilterTags />\n    </header>\n  );\n}\n","import React from 'react';\nimport { Placeholder, Row, Col } from 'react-bootstrap';\n\nexport default function Loading() {\n  const ROWS = 13;\n  const COLS = 3;\n\n  Col.defaultProps = { xs: 4 };\n\n  return (\n    <div>\n      {\n        Array.from({ length: ROWS }).map((_, i) => (\n          <Row className=\"ms-1 mb-2 me-1\" key={ i }>\n            {\n              Array.from({ length: COLS }).map((_2, j) => (\n                <Placeholder as={ Col } className=\"ps-1 pe-1\" key={ j } animation=\"glow\">\n                  <Placeholder size=\"lg\" className=\"rounded-1 p-3 w-100\" />\n                </Placeholder>\n              ))\n            }\n          </Row>\n        ))\n      }\n    </div>\n  );\n}\n","const EMPTY = 0;\nconst RADIX = 10;\n\nexport const filterPlanetsByName = (planets, name) => {\n  let output = planets;\n\n  if (name !== '') {\n    output = [...planets]\n      .filter((planet) => planet.name.toLowerCase().includes(name.toLowerCase()));\n  }\n\n  return output;\n};\n\nexport const filterPlanetsByNumericValues = (planets, numericColumnFilters) => {\n  let output = [...planets];\n  if (numericColumnFilters.length > EMPTY) {\n    numericColumnFilters.forEach((filter) => {\n      if (filter.comparison === 'maior que') {\n        output = output\n          .filter((planet) => {\n            const objectValue = planet[filter.column];\n            return parseInt(objectValue, RADIX) > filter.value;\n          });\n      } else if (filter.comparison === 'menor que') {\n        output = output\n          .filter((planet) => {\n            const objectValue = planet[filter.column];\n            return parseInt(objectValue, RADIX) < filter.value;\n          });\n      } else {\n        output = output\n          .filter((planet) => planet[filter.column] === filter.value);\n      }\n    });\n  }\n  return output;\n};\n","const ZERO = 0;\nconst ONE = 1;\nconst KEEP_LAST_3_CHARACTERS = -3;\nconst KEEP_LAST_13_CHARACTERS = -13;\nconst CUT_FIRST_44_CHARACTERS = 44;\n\nconst manipulateCellValue = (letter, column) => {\n  let output;\n\n  switch (column) {\n  case ('url'):\n    output = (`0${letter[column].slice(CUT_FIRST_44_CHARACTERS)}`)\n      .slice(KEEP_LAST_3_CHARACTERS).toLowerCase();\n    break;\n  case ('surface_water'):\n  case ('orbital_period'):\n  case ('diameter'):\n  case ('rotation_period'):\n  case ('population'):\n    output = letter[column] === 'unknown'\n      ? letter[column].toLowerCase()\n      : (`000000000000${letter[column]}`).slice(KEEP_LAST_13_CHARACTERS).toLowerCase();\n    break;\n  case ('films'):\n    output = letter[column][ZERO].toLowerCase();\n    break;\n  default:\n    output = letter[column].toLowerCase();\n  }\n\n  return output;\n};\n\nconst sortPlanets = (planets, order) => (\n  planets.sort((a, b) => {\n    const x = manipulateCellValue(a, order.column);\n    const y = manipulateCellValue(b, order.column);\n    if (x < y) { return order.sort === 'ASC' ? -ONE : ONE; }\n    if (x > y) { return order.sort === 'ASC' ? ONE : -ONE; }\n    return ZERO;\n  })\n);\n\nexport default sortPlanets;\n","import React from 'react';\nimport * as bs from 'react-bootstrap';\nimport Loading from './Loading';\nimport { usePlanets } from '../context/Planets';\nimport { useFilters } from '../context/Filters';\nimport {\n  filterPlanetsByName,\n  filterPlanetsByNumericValues,\n} from '../functions/filteringFunctions';\nimport sortPlanets from '../functions/sortingFunctions';\n\nexport default function Table() {\n  const { planets, loading } = usePlanets();\n  const { filters } = useFilters();\n  const { filterByName, numericColumnFilters, order } = filters;\n\n  if (loading || planets.length < 1) { return <Loading />; }\n\n  let tablePlanets = filterPlanetsByName(planets, filterByName);\n  tablePlanets = filterPlanetsByNumericValues(tablePlanets, numericColumnFilters);\n  tablePlanets = sortPlanets(tablePlanets, order);\n\n  return (\n    <bs.Table\n      striped\n      bordered\n      hover\n      variant=\"dark\"\n      size=\"sm\"\n      responsive\n      className=\"border-secondary\"\n    >\n      <thead>\n        <tr>\n          { Object.keys(planets[0]).map((planetKey, index) => (\n            <th key={ index } className=\"pe-2 ps-2\">{ planetKey }</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        { tablePlanets.map((planet, planetIndex) => {\n          const planetKeys = Object.keys(planet);\n          const tableColumns = planetKeys\n            .map((planetKey, planetKeyIndex) => {\n              let output;\n              switch (planetKey) {\n              case ('name'):\n                output = (\n                  <td\n                    key={ planetKeyIndex }\n                    data-testid=\"planet-name\"\n                    className=\"pe-2 ps-2\"\n                  >\n                    { planet[planetKey] }\n                  </td>);\n                break;\n\n              case ('films'):\n                output = (\n                  <td key={ planetKeyIndex } className=\"pe-2 ps-2\">\n                    <ul>\n                      { planet[planetKey].map((movieLink, liIndex) => (\n                        <li key={ liIndex }>\n                          <a href={ movieLink }>\n                            { `Film ${movieLink.replace(/\\D+/g, '')}` }\n                          </a>\n                        </li>)) }\n                    </ul>\n                  </td>);\n                break;\n\n              case ('url'):\n                output = (\n                  <td key={ planetKeyIndex } className=\"pe-2 ps-2\">\n                    <a href={ planet[planetKey] }>\n                      { `Planet ${planet[planetKey].replace(/\\D+/g, '')}` }\n                    </a>\n                  </td>);\n                break;\n\n              default:\n                output = (\n                  <td key={ planetKeyIndex } className=\"pe-2 ps-2\">\n                    { planet[planetKey] }\n                  </td>\n                );\n              }\n\n              return output;\n            });\n\n          return (<tr key={ planetIndex }>{ tableColumns }</tr>);\n        }) }\n      </tbody>\n    </bs.Table>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Table from './components/Table';\nimport { FiltersProvider } from './context/Filters';\nimport { PlanetsProvider } from './context/Planets';\n\nfunction App() {\n  return (\n    <PlanetsProvider>\n      <FiltersProvider>\n        <Header />\n        <Table />\n      </FiltersProvider>\n    </PlanetsProvider>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}